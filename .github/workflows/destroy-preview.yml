name: Destroy a preview environment
on:
  pull_request:
    types: [closed]
    branches: [develop]
jobs:
  destroy-preview-environment:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/terraform
    env:
      VERCEL_PROJECT_NAME: developer-console-framework-prod
      VERCEL_ORG: near
      VERCEL_TEAM_ID: team_0XCkE3xOywBTMmd6s7bqJQot
      GIT_REPO: pagoda-console
      BRANCH_NAME: ${GITHUB_HEAD_REF}
      VERCEL_AUTH_TOKEN: ${{ secrets.VERCEL_AUTH_TOKEN }}

    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2

      - id: "auth"
        uses: "google-github-actions/auth@v0"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v0"

      - name: "Set namespace"
        run: echo "PREVIEW_NAMESPACE=$(../scripts/preview_namespace.sh)" >> $GITHUB_ENV

      - name: "Set Terraform workspace"
        run: echo "TF_WORKSPACE=preview-$PREVIEW_NAMESPACE" >> $GITHUB_ENV

      - name: "Terraform init"
        run: terraform init -input=false

      - name: Terraform Destroy
        run: |
          terraform destroy -input=false -auto-approve -var-file ./env/preview.tfvars \
            -var "namespace=${PREVIEW_NAMESPACE}" \
            -var "database_password=${{secrets.DATABASE_PASSWORD_PREVIEW}}" \
            -var "api_image=${{needs.docker-build-and-push.outputs.image}}" \
            -var "frontend_base_url=dontcare" \
            -var "api_service_account=${{secrets.API_SERVICE_ACCOUNT_PREVIEW}}"

          # TODO make sure this deletes the TF state file from GCP bucket.
          # Delete this unneeded workspace
          terraform workspace select default
          terraform workspace delete $TF_WORKSPACE

          ../scripts/vercel_delete_env_var.sh NEXT_PUBLIC_API_BASE_URL
