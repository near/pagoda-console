# Frontend changes will automatically deploy via the vercel git integration.
name: Deploy a develop environment
on:
  pull_request:
    branches: [develop]
defaults:
  run:
    working-directory: backend
jobs:
  deploy-image:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend/terraform
    env:
      VERCEL_PROJECT_NAME: developer-console-framework-prod
      VERCEL_ORG: near
      VERCEL_TEAM_ID: team_0XCkE3xOywBTMmd6s7bqJQot
      GIT_REPO: pagoda-console
    steps:
      - uses: actions/checkout@v3

      # Setup auth: https://github.com/google-github-actions/setup-gcloud#service-account-key-json
      - id: "auth"
        uses: "google-github-actions/auth@v1"
        with:
          credentials_json: "${{ secrets.GCP_CREDENTIALS_PAGODA_DEVELOPER_CONSOLE }}"

      - name: "Set up Cloud SDK"
        uses: "google-github-actions/setup-gcloud@v1"

      - name: "Set env variables"
        run: |
          echo "DEV_NAMESPACE=dev" >> $GITHUB_ENV
          echo "DEV_SERVICE_NAME=developer-console-api-test" >> $GITHUB_ENV
          echo "DEV_REGION=us-east1" >> $GITHUB_ENV
          echo "DEV_DB_URL=35.185.74.37" >> $GITHUB_ENV
          echo "DEV_IMAGE_URL=gcr.io/near-dev-platform/developer-console-api:dev" >> $GITHUB_ENV

      - name: "Allowing internal traffic only for the service"
        run: gcloud run services update $DEV_SERVICE_NAME --region $DEV_REGION --platform managed --ingress internal

      - name: "Set Vercel env"
        run: |
          echo "BRANCH_NAME=develop" >> $GITHUB_ENV
          echo "VERCEL_AUTH_TOKEN=${{ secrets.VERCEL_AUTH_TOKEN }}" >> $GITHUB_ENV

      - name: "Set FE to maintenance mode"
        run: |
          ../scripts/vercel_upsert_env_var.sh NEXT_PUBLIC_DOWNTIME_MODE maintenance
          ../scripts/vercel_redeploy.sh

      - name: "Perform DB migrations"
        run: |
          cd .. && 
          DB_USER=postgres DB_PASS=${{secrets.DATABASE_PASSWORD_DEVELOP}} DB_URL=$DEV_DB_URL . ./scripts/export_prisma_env_vars.sh &&
          cd .. && pwd && npm ci && npm run -w database migrate:deploy

      - name: "Deploy image"
        run: gcloud run deploy $DEV_SERVICE_NAME --image=$DEV_IMAGE_URL --region $DEV_REGION

      - name: "Allowing all traffic for the service"
        run: gcloud run services update $DEV_SERVICE_NAME --region $DEV_REGION --platform managed --ingress all

      - name: "FE switch off maintenance mode"
        run: |
          ../scripts/vercel_delete_env_var.sh NEXT_PUBLIC_DOWNTIME_MODE
          ../scripts/vercel_redeploy.sh
